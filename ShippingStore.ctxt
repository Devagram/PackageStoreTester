#BlueJ class context
comment0.target=ShippingStore
comment0.text=\n\ This\ class\ is\ used\ to\ represent\ a\ database\ interface\ for\ a\ list\ of\n\ <CODE>Package\ Order</CODE>'s.\ It\ using\ a\ plain-text\ file\ "PackageOrderDB.txt"\n\ to\ store\ and\ write\ package\ order\ objects\ in\ readable\ text\ form.\ It\ contains\n\ an\ <CODE>ArrayList</CODE>\ called\ <CODE>packageOrerList</CODE>\ to\ store\ the\n\ database\ in\ a\ runtime\ friendly\ data\ structure.\ The\ <CODE>packageOrerList</CODE>\n\ is\ written\ to\ "PackageOrderDB.txt"\ at\ the\ end\ of\ the\ <CODE>ShippingStore</CODE>\ object's\n\ life\ by\ calling\ <CODE>flush()</CODE>.\ This\ class\ also\ provides\ methods\ for\n\ adding,\ remove,\ and\ searching\ for\ shipping\ orders\ from\ the\ list.\n\n\ @author\ Junye\ Wen\n
comment1.params=
comment1.target=ShippingStore()
comment1.text=\n\ This\ constructor\ is\ hard-coded\ to\ open\ "<CODE>PackageOrderDB.txt</CODE>"\ and\n\ initialize\ the\ <CODE>packageOrerList</CODE>\ with\ its\ contents.\ If\ no\ such\ file\n\ exists,\ then\ one\ is\ created.\ The\ contents\ of\ the\ file\ are\ "loaded"\ into\n\ the\ packageOrerList\ ArrayList\ in\ no\ particular\ order.\ The\ file\ is\ then\ closed\n\ during\ the\ duration\ of\ the\ program\ until\ <CODE>flush()</CODE>\ is\ called.\n\ @throws\ IOException\n
comment10.params=i
comment10.target=PackageOrder\ getPackageOrder(int)
comment10.text=\n\ This\ method\ is\ used\ to\ retrieve\ the\ PackageOrder\ object\ from\ the\n\ <CODE>PackageOrderList</CODE>\ at\ a\ given\ index.\n\n\ @param\ i\ the\ index\ of\ the\ desired\ <CODE>PackageOrder</CODE>\ object.\n\ @return\ the\ <CODE>PackageOrder</CODE>\ object\ at\ the\ index\ or\ null\ if\ the\ index\ is\n\ invalid.\n
comment11.params=dataReader
comment11.target=void\ read(java.io.Reader)
comment11.text=\n\ This\ method\ reads\ data\ from\ the\ FileReader\ provided\ as\ input\ and\ puts\ them\n\ in\ the\ packageOrderList.\n\ @param\ dataReader\ The\ input\ FileReader\ to\ read\ from.\n\ @throws\ IOException\ If\ any\ problem\ occurs\ with\ the\ data\ input.\n
comment12.params=dataWriter
comment12.target=void\ flush(java.io.Writer)
comment12.text=\n\ This\ method\ accepts\ a\ <CODE>Writer</CODE>\ to\ a\ file\ and\ overwrites\ it\ with\ a\ text\ representation\ of\n\ all\ the\ package\ orders\ in\ the\ <CODE>PackageOrderList</CODE>.\n\ This\ should\ be\ the\ last\ method\ to\ be\ called\ before\ exiting\ the\ program.\n\ @param\ dataWriter\ The\ data\ to\ write\ in\ the\ file.\n\ @throws\ IOException\n
comment2.params=
comment2.target=java.io.File\ getDataFile()
comment2.text=\n\ Method\ that\ returns\ a\ reference\ to\ the\ data\ file.\n\ @return\ dataFile\n
comment3.params=
comment3.target=void\ showPackageOrders()
comment3.text=\n\ Method\ showPackageOrer\ displays\ the\ current\ list\ of\ package\ orders\ in\ the\ Arraylist\ in\ no\n\ particular\ order.\n\n
comment4.params=orders
comment4.target=void\ showPackageOrders(java.util.ArrayList)
comment4.text=\n\ Private\ method\ used\ as\ an\ auxiliary\ method\ to\ display\ a\ given\ ArrayList\n\ of\ package\ orders\ in\ a\ formatted\ manner.\n\n\ @param\ orders\ the\ package\ order\ list\ to\ be\ displayed.\n
comment5.params=low\ high
comment5.target=void\ showPackageOrdersRange(float,\ float)
comment5.text=\n\ This\ method\ displays\ package\ orders\ that\ have\ a\ weight\ within\ the\ range\ of\n\ <CODE>low</CODE>\ to\ <CODE>high</CODE>.\n\n\ @param\ low\ a\ float\ that\ is\ the\ lower\ bound\ weight.\n\ @param\ high\ a\ float\ that\ is\ the\ upper\ bound\ weight.\n
comment6.params=trackingNumber
comment6.target=int\ findPackageOrder(java.lang.String)
comment6.text=\n\ This\ method\ can\ be\ used\ to\ find\ a\ package\ order\ in\ the\ Arraylist\ of\ orders.\n\n\ @param\ trackingNumber\ a\ <CODE>String</CODE>\ that\ represents\ the\ tracking\ number\ \n\ of\ the\ order\ that\ to\ be\ searched\ for.\n\ @return\ the\ <CODE>int</CODE>\ index\ of\ the\ package\ orders\ in\ the\ Arraylist\ of\ orders,\n\ or\ -1\ if\ the\ search\ failed.\n
comment7.params=trackingNumber
comment7.target=void\ searchPackageOrder(java.lang.String)
comment7.text=\n\ This\ method\ can\ be\ used\ to\ search\ for\ a\ package\ order\ in\ the\ Arraylist\ of\ orders.\n\n\ @param\ trackingNumber\ a\ <CODE>String</CODE>\ that\ represents\ the\ tracking\ number\n\ of\ the\ order\ that\ to\ be\ searched\ for.\n
comment8.params=trackingnumber\ type\ specification\ mailingclass\ weight\ volume
comment8.target=void\ addOrder(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String)
comment8.text=\n\ This\ method\ is\ used\ to\ add\ a\ package\ order\ to\ the\ orderList\ ArrayList.\ In\ order\ for\ a\n\ package\ order\ to\ be\ added\ to\ the\ ArrayList\ it\ must\ comply\ with\ the\ following\:\n\ <p>\n\ 1.\ The\ order\ is\ not\ already\ in\ the\ ArrayList\ according\ to\ the\ tracking\ number\n\ as\ the\ unique\ key.\n\ <p>\n\ 2.\ The\ TrackningNumber\ string\ matches\ the\ following\ regular\ expression\:\n\ <CODE>"[A-Za-z0-9]{5}"</CODE>\ or\ in\ other\ words\:\ it\n\ is\ 5\ alphanumeric\ characters.\n\ <p>\n\ 3.\ The\ Type\ of\ the\ order\ can\ be\ only\ one\ of\ the\ following\:\n\ \ \ \ Postcard,\ Letter,\ Envelope,\ Packet,\ Box,\ Crate,\ Drum,\ Roll,\ Tube.\n\ <p>\n\ 4.\ The\ Specification\ of\ the\ order\ can\ be\ only\ one\ of\ the\ following\:\n\ \ \ \ Fragile,\ Books,\ Catalogs,\ Do-not-Bend,\ N/A.\n\ <p>\n\ 5.\ The\ Mailing\ Class\ of\ the\ order\ can\ be\ only\ one\ of\ the\ following\:\n\ \ \ \ First-Class,\ Priority,\ Retail,\ Ground,\ Metro.\n\ <p>\n\ 6.\ The\ Weight\ must\ be\ non-negative.\n\ <p>\n\ 7.\ The\ Volume\ must\ be\ non-negative.\n\ @param\ toAdd\ the\ <CODE>PackageOrder</CODE>\ object\ to\ add\ to\ the\n\ <CODE>packageOrerList</CODE>\n
comment9.params=trackingNum
comment9.target=void\ removeOrder(java.lang.String)
comment9.text=\n\ This\ method\ will\ remove\ an\ order\ from\ the\ <CODE>packageOrerList</CODE>\ ArrayList.\ It\n\ will\ remove\ the\ instance\ of\ an\ order\ that\ matches\ tracking\ number\ that\ was\n\ passed\ to\ this\ method.\ If\ no\ such\ order\ exists,\ it\ will\ produce\ an\ error\ message.\n\n\ @param\ toDelete\ the\ <CODE>PackageOrder</CODE>\ object\ to\ be\ removed.\n
numComments=13
