#BlueJ class context
comment0.target=PackageOrder
comment0.text=\n\ This\ class\ is\ a\ very\ simple\ representation\ of\ a\ package\ order.\ There\ are\ only\ getter\n\ methods\ and\ no\ setter\ methods\ and\ as\ a\ result\ a\ package\ order\ cannot\ be\ mutated\ once\n\ initialized.\ A\ package\ order\ object\ can\ also\ call\ the\ two\ override\ methods\n\ <CODE>toString()</CODE>\ and\ <CODE>equals()</CODE>\n\n\ @author\ Junye\ Wen\n
comment1.params=trackingnumber\ type\ specification\ mailingclass\ weight\ volume
comment1.target=PackageOrder(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ float,\ int)
comment1.text=\n\ This\ constructor\ initializes\ the\ package\ order\ object.\ The\ constructor\ provides\ no\n\ user\ input\ validation.\ That\ should\ be\ handled\ by\ the\ class\ that\ creates\ a\n\ package\ order\ object.\n\n\ @param\ trackingnumber\ a\ <b><CODE>String</CODE></b>\ that\ represents\ the\ tracking\ number\n\n\ @param\ type\ a\ <b><CODE>String</CODE></b>\ that\ represents\ the\ type.\n\ Types\:\ Postcard,\ Letter,\ Envelope,\ Packet,\ Box,\ Crate,\ Drum,\ Roll,\ Tube.\n\n\ @param\ specification\ a\ <b><CODE>String</CODE></b>\ that\ represents\ the\ specification.\n\ Specification\:\ Fragile,\ Books,\ Catalogs,\ Do-not-Bend,\ N/A\ -\ one\ per\ package\n\n\ @param\ mailingclass\ a\ <b><CODE>String</CODE></b>\ that\ represents\ the\ mailing\ class\n\ Mailing\ class\:\ First-Class,\ Priority,\ Retail,\ Ground,\ Metro.\n\n\ @param\ weight\ a\ <b><CODE>float</CODE></b>\ that\ represents\ the\ weight\ of\ the\ package\ in\ oz\n\n\ @param\ volume\ an\ <b><CODE>int</CODE></b>\ that\ represents\ the\ volume\ of\ the\ package\ in\n\ cubic\ inches,\ calculated\ as\ Width\ x\ Length\ x\ Height\n\n
comment2.params=
comment2.target=java.lang.String\ getTrackingNumber()
comment2.text=\n\ This\ method\ returns\ the\ package\ order's\ tracking\ number.\n\n\ @return\ a\ <b><CODE>String</CODE></b>\ that\ is\ the\ tracking\ number\ of\ the\ package\ order.\n
comment3.params=
comment3.target=java.lang.String\ getType()
comment3.text=\n\ This\ method\ returns\ the\ package\ order's\ type.\n\n\ @return\ a\ <b><CODE>String</CODE></b>\ that\ is\ the\ package\ order's\ type.\n
comment4.params=
comment4.target=java.lang.String\ getSpecification()
comment4.text=\n\ This\ method\ returns\ the\ package\ order's\ specification.\n\n\ @return\ a\ <b><CODE>String</CODE></b>\ that\ is\ the\ package\ order's\ specification.\n
comment5.params=
comment5.target=java.lang.String\ getMailingClass()
comment5.text=\n\ This\ method\ returns\ the\ package\ order's\ mailing\ class.\n\n\ @return\ a\ <b><CODE>string</CODE></b>\ that\ is\ the\ package\ order's\ mailing\ class\n
comment6.params=
comment6.target=float\ getWeight()
comment6.text=\n\ This\ method\ returns\ the\ package's\ weight.\n\n\ @return\ a\ <b><CODE>float</CODE></b>\ that\ is\ the\ package's\ weight\n
comment7.params=
comment7.target=int\ getVolume()
comment7.text=\n\ This\ method\ returns\ the\ package's\ volume.\n\n\ @return\ an\ <b><CODE>int</CODE></b>\ that\ is\ the\ package's\ volume\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\n\ This\ method\ returns\ the\ package\ order's\ fields\ as\ a\ string\ representation.\n\n\ @return\ a\ <b><CODE>String</CODE></b>\ that\ lists\ the\ fields\ of\ the\ package\ order\n\ object\ delineated\ by\ a\ space\ and\ in\ the\ same\ order\ as\ the\ constructor\n
comment9.params=c
comment9.target=boolean\ equals(shippingstore.PackageOrder)
comment9.text=\n\ This\ method\ provides\ a\ way\ to\ compare\ two\ package\ order\ objects.\n\n\ @param\ c\ a\ <b><CODE>PackageOrder</CODE></b>\ object\ that\ is\ used\ to\ compare\ to\n\ <b><CODE>this</CODE></b>\ package\ order.\ Two\ orders\ are\ equal\ if\ their\ TrackingNumber\ is\ the\n\ same.\n\ @return\ the\ <CODE>boolean</CODE>\ value\ of\ the\ comparison.\n
numComments=10
